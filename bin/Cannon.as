package com.citrusengine.objects.platformer { 	import com.citrusengine.objects.PhysicsObject;	import com.citrusengine.objects.platformer.Missile;	import com.citrusengine.objects.platformer.Platform; 	import org.osflash.signals.Signal; 	import flash.events.TimerEvent;	import flash.utils.Timer; 	/**	 * @author Aymeric	 */	public class Cannon extends Platform { 		public var onGiveDamage:Signal; 		public var fireRate:Number;		public var startingDirection:String = "right"; 		public var missileWidth:uint = 20;		public var missileHeight:uint = 20;		public var missileSpeed:Number = 2;		public var missileAngle:Number = 0;		public var missileExplodeDuration:Number = 1000;		public var missileFuseDuration:Number = 10000;		public var missileView:String = ""; 		protected var _firing:Boolean = false; 		private var _timer:Timer; 		public function Cannon(name:String, params:Object = null) {			super(name, params); 			onGiveDamage = new Signal(PhysicsObject);		} 		override public function destroy():void { 			onGiveDamage.removeAll(); 			_timer.stop();			_timer.removeEventListener(TimerEvent.TIMER, _fire); 			super.destroy();		} 		override public function update(timeDelta:Number):void { 			super.update(timeDelta); 			_updateAnimation();		} 		protected function _damage(missile:Missile, contact:PhysicsObject):void { 			if (contact != null) {				onGiveDamage.dispatch(contact);			}		} 		public function startFire():void { 			_firing = true; 			_timer = new Timer(fireRate);			_timer.addEventListener(TimerEvent.TIMER, _fire);			_timer.start();		} 		public function stopFire():void { 			_firing = false; 			_timer.stop();			_timer.removeEventListener(TimerEvent.TIMER, _fire);		} 		protected function _fire(tEvt:TimerEvent):void { 			var missile:Missile; 			if (startingDirection == "right") {				missile = new Missile("Missile", {x:x + width, y:y, width:missileWidth, height:missileHeight, speed:missileSpeed, angle:missileAngle, explodeDuration:missileExplodeDuration, fuseDuration:missileFuseDuration, view:missileView});			} else {				missile = new Missile("Missile", {x:x - width, y:y, width:missileWidth, height:missileHeight, speed:-missileSpeed, angle:missileAngle, explodeDuration:missileExplodeDuration, fuseDuration:missileFuseDuration, view:missileView});			} 			_ce.state.add(missile);			missile.onExplode.addOnce(_damage);		} 		protected function _updateAnimation():void { 			if (_firing) {				_animation = "fire";			} else {				_animation = "normal";			}		}	}}